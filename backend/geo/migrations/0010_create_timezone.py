# Generated by Django 2.1 on 2019-02-25 10:30
import datetime
import os

import pytz
from django.db import migrations

from geo.migrations.data import csv_reader

CURRENT_DIR_PATH = os.path.dirname(os.path.abspath(__file__))
CITIES_CSV_FILE = 'us_cities.csv'
CITIES_CSV_PATH = os.path.join(CURRENT_DIR_PATH, 'data', CITIES_CSV_FILE)


def get_timezone_data():
    result = []
    for i in pytz.all_timezones:
        tz = datetime.datetime.now(pytz.timezone(i))
        result.append({
            'name': tz.tzinfo.zone,
            'abbreviation': tz.tzname(),
            'utc_offset': tz.strftime('%z')
        })
    return result


def create_time_zones(apps, schema_editor):
    tz_model = apps.get_model('geo', 'TimeZone')
    timezones_data = get_timezone_data()
    tz_model.objects.bulk_create(tz_model(**i) for i in timezones_data)
    timezones = tz_model.objects.all()
    timezones_cities = {t.name: [] for t in timezones}
    state_model = apps.get_model('geo', 'State')
    states = state_model.objects.prefetch_related('cities').all()
    state_cities = csv_reader.get_cities_from_csv(
        CITIES_CSV_PATH, incorporated='True')
    tmp = {}
    for state, cities in state_cities.items():
        tmp[state] = {}
        for city in cities:
            tmp[state][city['city']] = city
    for state in states:
        if state.abbreviation in state_cities:
            for city in state.cities.all():
                timezones_cities[tmp[state.abbreviation][city.name]['timezone']].append(city)
    timezones = {tz.name: tz for tz in tz_model.objects.all()}
    for tz, cities in timezones_cities.items():
        if cities:
            timezones[tz].cities.add(*cities)


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0009_timezone_model_and_field'),
    ]

    operations = [
        migrations.RunPython(create_time_zones)
    ]
